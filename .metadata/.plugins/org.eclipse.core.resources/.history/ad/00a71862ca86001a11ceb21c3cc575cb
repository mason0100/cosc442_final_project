

import java.util.*;
import org.junit.Assert;
import org.junit.Test;

@Generated(value="org.junit-tools-1.1.0")
public class PreGameInputHandlerTest{

	@Before
	public void setUp() throws Exception {
	
	}

	@After
	public void tearDown() throws Exception {
	
	}

	private PreGameInputHandler createTestSubject()  {
	 return new PreGameInputHandler(new FreeColClient(new InputStream(), ""));
	}

	@MethodRef(name="handle", signature="(QConnection;QElement;)QElement;")
	@Test
	public void handleTest() throws Exception {
	PreGameInputHandler testSubject;Connection connection = null;
	Element element = null;
	Element result;
	
	// default test
	testSubject=createTestSubject();result=testSubject.handle(connection, element);
	
	Assert.fail();
	}

	@MethodRef(name="addPlayer", signature="(QElement;)QElement;")
	@Test
	public void addPlayerTest() throws Exception {
	PreGameInputHandler testSubject;Element element = null;
	Element result;
	
	// default test
	testSubject=createTestSubject();result=Whitebox.invokeMethod(testSubject,"addPlayer", new Object[]{Element.class});
	
	Assert.fail();
	}

	@MethodRef(name="chat", signature="(QElement;)QElement;")
	@Test
	public void chatTest() throws Exception {
	PreGameInputHandler testSubject;Element element = null;
	Element result;
	
	// default test
	testSubject=createTestSubject();result=Whitebox.invokeMethod(testSubject,"chat", new Object[]{Element.class});
	
	Assert.fail();
	}

	@MethodRef(name="error", signature="(QElement;)QElement;")
	@Test
	public void errorTest() throws Exception {
	PreGameInputHandler testSubject;Element element = null;
	Element result;
	
	// default test
	testSubject=createTestSubject();result=Whitebox.invokeMethod(testSubject,"error", new Object[]{Element.class});
	
	Assert.fail();
	}

	@MethodRef(name="logout", signature="(QElement;)QElement;")
	@Test
	public void logoutTest() throws Exception {
	PreGameInputHandler testSubject;Element element = null;
	Element result;
	
	// default test
	testSubject=createTestSubject();result=Whitebox.invokeMethod(testSubject,"logout", new Object[]{Element.class});
	
	Assert.fail();
	} 
}