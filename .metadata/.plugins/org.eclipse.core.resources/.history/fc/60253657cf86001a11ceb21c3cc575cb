

import java.util.*;
import org.junit.Assert;
import org.junit.Test;

@Generated(value="org.junit-tools-1.1.0")
public class TileViewerTest{

	@Before
	public void setUp() throws Exception {
	
	}

	@After
	public void tearDown() throws Exception {
	
	}

	private TileViewer createTestSubject()  {
	 return new TileViewer(new FreeColClient(new InputStream(), ""));
	}

	@MethodRef(name="getImageLibrary", signature="()QImageLibrary;")
	@Test
	public void getImageLibraryTest() throws Exception {
	TileViewer testSubject;ImageLibrary result;
	
	// default test
	testSubject=createTestSubject();result=Whitebox.invokeMethod(testSubject,"getImageLibrary");
	
	Assert.fail();
	}

	@MethodRef(name="createTileImageWithOverlayAndForest", signature="(QTileType;QDimension;)QBufferedImage;")
	@Test
	public void createTileImageWithOverlayAndForestTest() throws Exception {
	TileType type = null;
	Dimension size = null;
	BufferedImage result;
	
	// default test
	result=Whitebox.invokeMethod(TileViewer.class,"createTileImageWithOverlayAndForest", new Object[]{TileType.class, Dimension.class});
	
	Assert.fail();
	}

	@MethodRef(name="createTileImageWithBeachBorderAndItems", signature="(QTile;)QBufferedImage;")
	@Test
	public void createTileImageWithBeachBorderAndItemsTest() throws Exception {
	TileViewer testSubject;Tile tile = null;
	BufferedImage result;
	
	// default test
	testSubject=createTestSubject();result=Whitebox.invokeMethod(testSubject,"createTileImageWithBeachBorderAndItems", new Object[]{Tile.class});
	
	Assert.fail();
	}

	@MethodRef(name="createTileImage", signature="(QTile;)QBufferedImage;")
	@Test
	public void createTileImageTest() throws Exception {
	TileViewer testSubject;Tile tile = null;
	BufferedImage result;
	
	// default test
	testSubject=createTestSubject();result=Whitebox.invokeMethod(testSubject,"createTileImage", new Object[]{Tile.class});
	
	Assert.fail();
	}

	@MethodRef(name="createColonyTileImage", signature="(QTile;QColony;)QBufferedImage;")
	@Test
	public void createColonyTileImageTest() throws Exception {
	TileViewer testSubject;Tile tile = null;
	Colony colony = null;
	BufferedImage result;
	
	// default test
	testSubject=createTestSubject();result=Whitebox.invokeMethod(testSubject,"createColonyTileImage", new Object[]{Tile.class, Colony.class});
	
	Assert.fail();
	}

	@MethodRef(name="displayColonyTiles", signature="(QGraphics2D;[[QTile;QColony;)V")
	@Test
	public void displayColonyTilesTest() throws Exception {
	TileViewer testSubject;Graphics2D g = null;
	Tile[][] tiles = new Tile[][]{null};
	Colony colony = null;
	
	
	// default test
	testSubject=createTestSubject();Whitebox.invokeMethod(testSubject,"displayColonyTiles", new Object[]{Graphics2D.class, Tile[][].class, Colony.class});
	
	Assert.fail();
	}

	@MethodRef(name="displayColonyTile", signature="(QGraphics2D;QTile;QColony;QBufferedImage;)V")
	@Test
	public void displayColonyTileTest() throws Exception {
	TileViewer testSubject;Graphics2D g = null;
	Tile tile = null;
	Colony colony = null;
	BufferedImage overlayImage = null;
	
	
	// default test
	testSubject=createTestSubject();Whitebox.invokeMethod(testSubject,"displayColonyTile", new Object[]{Graphics2D.class, Tile.class, Colony.class, BufferedImage.class});
	
	Assert.fail();
	} 
}